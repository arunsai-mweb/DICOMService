
@model DiagoDICOM.Models.Clients
@{
	Layout = null;
}

<form asp-action="SaveClient" id="frmSaveClient">
	<div class="form-group row">
		<label asp-for="ClientId" class="control-label col-sm-4">Client Id:</label>
		<div class="col-sm-8">
			<input type="number" name="ClientId" id="ClientId" value="" class="form-control" />
		</div>
	</div>
	<div class="form-group row">
		<label asp-for="ClientName" class="control-label col-sm-4">Client Name:</label>
		<div class="col-sm-8">
			@Html.TextBoxFor(x => x.ClientName, new { @class = "form-control" })
		</div>
	</div>
	<div class="form-group row">
		<label asp-for="IpAddress" class="control-label col-sm-4">Ip Address:</label>
		<div class="col-sm-8">
			@Html.TextBoxFor(x => x.IpAddress, new { @class = "form-control" })
		</div>
	</div>
	<div class="form-group row">
		<label asp-for="AETitle" class="control-label col-sm-4">AE Title:</label>
		<div class="col-sm-8">
			@Html.TextBoxFor(x => x.AETitle, new { @class = "form-control" })
		</div>
	</div>
	<div class="form-group row">
		<label asp-for="Port" class="control-label col-sm-4">Port:</label>
		<div class="col-sm-8">
			@Html.TextBoxFor(x => x.Port, new { @class = "form-control" })
		</div>
	</div>
	<div class="form-group row">
		<label asp-for="DestinationId" class="control-label col-sm-4">Default Destination:</label>
		<div class="col-sm-8">
			@Html.DropDownList("DestinationId", ViewData["Destinations"] as IEnumerable<SelectListItem>, "Select", new { @class = "form-control" })
		</div>
	</div>

	<div class="form-group pull-right">
		<input type="submit" value="Submit" id="btnSaveClient" class="btn btn-primary" />
	</div>
</form>
@Html.HiddenFor(x => x.ClientId, new { @class = "hdnClientId" })
<script>
	var data = {};
	$(function () {

		data = JSON.parse('@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.Clients))');
		if ('@Model.ClientId' == 0) {
			$('#ClientId').val('');
		}
		else {
			$('#ClientId').val('@Model.ClientId')
		}
	})

	$('#btnSaveClient').click(function (e) {
		var mode = $('.modal-title').text().split(" ")[0];
		var hasMatch = false;
		for (var index = 0; index < data.length; ++index) {
			var client = data[index];
			console.log(client);
			if (client.ClientId == parseInt($('#ClientId').val())) {
				hasMatch = true;
				break;
			}
		}
		if (hasMatch && mode == "Add") {
			alert("ClientId already Exists");
			return false;
		}
		$("#frmSaveClient").submit(function (e) {
		}).validate({
				errorClass: "errors",
				rules: {
					"ClientId": {
						required: true,
					},
					"ClientName": {
						required: true,
					},
					"DestinationId": {
						required: true,
					},
				},
				messages: {
					"ClientId": "Required",
					"ClientName": "Required",
					"DestinationId": "Required"
			},
			submitHandler: function (form) {
				$("#frmSaveClient").submit();
				return false;
			}
		})
	})
</script>